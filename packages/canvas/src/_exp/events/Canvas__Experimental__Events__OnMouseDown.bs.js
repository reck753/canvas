// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Array from "@rescript/core/src/Core__Array.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as Canvas__Experimental__CanvasUtils from "../Canvas__Experimental__CanvasUtils.bs.js";
import * as Canvas__Experimental__ElementUtils from "../Canvas__Experimental__ElementUtils.bs.js";

function handler(e, offsetX, offsetY, store, tools, updateStore) {
  e.preventDefault();
  var target = e.target;
  var clientX = Canvas__Experimental__CanvasUtils.normalizeClientX(Canvas__Experimental__CanvasUtils.getClientX(e), offsetX);
  var clientY = Canvas__Experimental__CanvasUtils.normalizeClientY(Canvas__Experimental__CanvasUtils.getClientY(e), offsetY);
  var highestZIndex = Core__Array.reduce(store.elements, 0, (function (acc, element) {
          return Math.max(acc, element._0.zIndex);
        }));
  var nextZIndex = highestZIndex + 1;
  if (e.detail === 2) {
    return Canvas__Experimental__ElementUtils.invokeOnDoubleClick(clientX, clientY, tools, target, updateStore, store);
  }
  var selectedTool = tools.find(function (tool) {
        return tool.toolId === store.selectedToolId;
      });
  Core__Option.forEach(selectedTool, (function (selectedTool) {
          selectedTool.onStart({
                clientX: clientX,
                clientY: clientY,
                store: store,
                updateStore: updateStore,
                target: target,
                tools: tools,
                nextIndex: nextZIndex
              });
        }));
}

var CanvasUtils;

var ElementUtils;

export {
  CanvasUtils ,
  ElementUtils ,
  handler ,
}
/* Canvas__Experimental__ElementUtils Not a pure module */
